package com.zfsoft.mobile.servlet.homePageHttp.newoa.jhc.cn;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2017-10-19T11:15:22.501+08:00
 * Generated source version: 2.6.0
 *
 */
@WebServiceClient(name = "wsInfoPortalService",
                  wsdlLocation = "http://newoa.jhc.cn/oa-infoPortal/services/infoPortal.jws?wsdl",
                  targetNamespace = "http://ws.jh_infoPortal.ui.oa.web.business.lysoft.com/")
public class WsInfoPortalService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.jh_infoPortal.ui.oa.web.business.lysoft.com/", "wsInfoPortalService");
    public final static QName WsInfoPortalPort = new QName("http://ws.jh_infoPortal.ui.oa.web.business.lysoft.com/", "wsInfoPortalPort");
    static {
        URL url = null;
        try {
            url = new URL("http://newoa.jhc.cn/oa-infoPortal/services/infoPortal.jws?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WsInfoPortalService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://newoa.jhc.cn/oa-infoPortal/services/infoPortal.jws?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WsInfoPortalService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WsInfoPortalService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WsInfoPortalService() {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WsInfoPortalService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WsInfoPortalService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WsInfoPortalService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }

    /**
     *
     * @return
     *     returns WsInfoPortal
     */
    @WebEndpoint(name = "wsInfoPortalPort")
    public WsInfoPortal getWsInfoPortalPort() {
        return super.getPort(WsInfoPortalPort, WsInfoPortal.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WsInfoPortal
     */
    @WebEndpoint(name = "wsInfoPortalPort")
    public WsInfoPortal getWsInfoPortalPort(WebServiceFeature... features) {
        return super.getPort(WsInfoPortalPort, WsInfoPortal.class, features);
    }

}
