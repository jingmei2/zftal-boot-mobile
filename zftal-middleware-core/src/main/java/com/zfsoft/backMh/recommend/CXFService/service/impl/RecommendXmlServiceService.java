package com.zfsoft.backMh.recommend.CXFService.service.impl;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.zfsoft.backMh.recommend.CXFService.service.IRecommendXmlService;


/**
 * This class was generated by Apache CXF 2.6.0
 * 2013-01-31T16:38:25.671+08:00
 * Generated source version: 2.6.0
 *
 */
@WebServiceClient(name = "RecommendXmlServiceService",
                  wsdlLocation = "http://10.71.32.205:8888/zfmcmh/webservices/mhrecommend/RecommendXmlService?wsdl",
                  targetNamespace = "http://impl.service.mhrecommend.logic.webservice.general.zfsoft.com/")
public class RecommendXmlServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.service.mhrecommend.logic.webservice.general.zfsoft.com/", "RecommendXmlServiceService");
    public final static QName RecommendXmlServicePort = new QName("http://impl.service.mhrecommend.logic.webservice.general.zfsoft.com/", "RecommendXmlServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://10.71.32.205:8888/zfmcmh/webservices/mhrecommend/RecommendXmlService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RecommendXmlServiceService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://10.71.32.205:8888/zfmcmh/webservices/mhrecommend/RecommendXmlService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RecommendXmlServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RecommendXmlServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RecommendXmlServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }


    /**
     *
     * @return
     *     returns IRecommendXmlService
     */
    @WebEndpoint(name = "RecommendXmlServicePort")
    public IRecommendXmlService getRecommendXmlServicePort() {
        return super.getPort(RecommendXmlServicePort, IRecommendXmlService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IRecommendXmlService
     */
    @WebEndpoint(name = "RecommendXmlServicePort")
    public IRecommendXmlService getRecommendXmlServicePort(WebServiceFeature... features) {
        return super.getPort(RecommendXmlServicePort, IRecommendXmlService.class, features);
    }

}
