package com.zfsoft.jw.org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2015-08-07T16:52:16.790+08:00
 * Generated source version: 2.6.0
 *
 */
@WebServiceClient(name = "Service",
                  wsdlLocation = "http://10.71.19.74:7978/Service.svc?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class Service extends javax.xml.ws.Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "Service");
    public final static QName ExamArrangeContract = new QName("http://tempuri.org/", "ExamArrangeContract");
    public final static QName NoticeContract = new QName("http://tempuri.org/", "NoticeContract");
    public final static QName GradeExameListContract = new QName("http://tempuri.org/", "GradeExameListContract");
    public final static QName ClassPeriodTimeContract = new QName("http://tempuri.org/", "ClassPeriodTimeContract");
    public final static QName TeacherInfoContract = new QName("http://tempuri.org/", "TeacherInfoContract");
    public final static QName ClassRoomContract = new QName("http://tempuri.org/", "ClassRoomContract");
    public final static QName LoginContract = new QName("http://tempuri.org/", "LoginContract");
    public final static QName ConfigurationInfoContract = new QName("http://tempuri.org/", "ConfigurationInfoContract");
    public final static QName StudentInfoContract = new QName("http://tempuri.org/", "StudentInfoContract");
    public final static QName CourseTaskContract = new QName("http://tempuri.org/", "CourseTaskContract");
    public final static QName ScoreSearchContract = new QName("http://tempuri.org/", "ScoreSearchContract");
    public final static QName CampusContract = new QName("http://tempuri.org/", "CampusContract");
    public final static QName TeacherSuperviseArrangementContract = new QName("http://tempuri.org/", "TeacherSuperviseArrangementContract");
    public final static QName CourseScheduleContract = new QName("http://tempuri.org/", "CourseScheduleContract");
    static {
        URL url = null;
        try {
            url = new URL("http://10.71.19.74:7978/Service.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://10.71.19.74:7978/Service.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
   /* public Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }*/

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
 /*   public Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }*/

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
/*    public Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }*/

    /**
     *
     * @return
     *     returns IExamArrange
     */
    @WebEndpoint(name = "ExamArrangeContract")
    public IExamArrange getExamArrangeContract() {
        return super.getPort(ExamArrangeContract, IExamArrange.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IExamArrange
     */
    @WebEndpoint(name = "ExamArrangeContract")
    public IExamArrange getExamArrangeContract(WebServiceFeature... features) {
        return super.getPort(ExamArrangeContract, IExamArrange.class, features);
    }
    /**
     *
     * @return
     *     returns INoticePost
     */
    @WebEndpoint(name = "NoticeContract")
    public INoticePost getNoticeContract() {
        return super.getPort(NoticeContract, INoticePost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INoticePost
     */
    @WebEndpoint(name = "NoticeContract")
    public INoticePost getNoticeContract(WebServiceFeature... features) {
        return super.getPort(NoticeContract, INoticePost.class, features);
    }
    /**
     *
     * @return
     *     returns IGradeExameList
     */
    @WebEndpoint(name = "GradeExameListContract")
    public IGradeExameList getGradeExameListContract() {
        return super.getPort(GradeExameListContract, IGradeExameList.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IGradeExameList
     */
    @WebEndpoint(name = "GradeExameListContract")
    public IGradeExameList getGradeExameListContract(WebServiceFeature... features) {
        return super.getPort(GradeExameListContract, IGradeExameList.class, features);
    }
    /**
     *
     * @return
     *     returns IClassPeriodTime
     */
    @WebEndpoint(name = "ClassPeriodTimeContract")
    public IClassPeriodTime getClassPeriodTimeContract() {
        return super.getPort(ClassPeriodTimeContract, IClassPeriodTime.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IClassPeriodTime
     */
    @WebEndpoint(name = "ClassPeriodTimeContract")
    public IClassPeriodTime getClassPeriodTimeContract(WebServiceFeature... features) {
        return super.getPort(ClassPeriodTimeContract, IClassPeriodTime.class, features);
    }
    /**
     *
     * @return
     *     returns ITeacherInfo
     */
    @WebEndpoint(name = "TeacherInfoContract")
    public ITeacherInfo getTeacherInfoContract() {
        return super.getPort(TeacherInfoContract, ITeacherInfo.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITeacherInfo
     */
    @WebEndpoint(name = "TeacherInfoContract")
    public ITeacherInfo getTeacherInfoContract(WebServiceFeature... features) {
        return super.getPort(TeacherInfoContract, ITeacherInfo.class, features);
    }
    /**
     *
     * @return
     *     returns IClassRoom
     */
    @WebEndpoint(name = "ClassRoomContract")
    public IClassRoom getClassRoomContract() {
        return super.getPort(ClassRoomContract, IClassRoom.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IClassRoom
     */
    @WebEndpoint(name = "ClassRoomContract")
    public IClassRoom getClassRoomContract(WebServiceFeature... features) {
        return super.getPort(ClassRoomContract, IClassRoom.class, features);
    }
    /**
     *
     * @return
     *     returns ILogin
     */
    @WebEndpoint(name = "LoginContract")
    public ILogin getLoginContract() {
        return super.getPort(LoginContract, ILogin.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ILogin
     */
    @WebEndpoint(name = "LoginContract")
    public ILogin getLoginContract(WebServiceFeature... features) {
        return super.getPort(LoginContract, ILogin.class, features);
    }
    /**
     *
     * @return
     *     returns IConfigurationInfo
     */
    @WebEndpoint(name = "ConfigurationInfoContract")
    public IConfigurationInfo getConfigurationInfoContract() {
        return super.getPort(ConfigurationInfoContract, IConfigurationInfo.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IConfigurationInfo
     */
    @WebEndpoint(name = "ConfigurationInfoContract")
    public IConfigurationInfo getConfigurationInfoContract(WebServiceFeature... features) {
        return super.getPort(ConfigurationInfoContract, IConfigurationInfo.class, features);
    }
    /**
     *
     * @return
     *     returns IStudentInfo
     */
    @WebEndpoint(name = "StudentInfoContract")
    public IStudentInfo getStudentInfoContract() {
        return super.getPort(StudentInfoContract, IStudentInfo.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IStudentInfo
     */
    @WebEndpoint(name = "StudentInfoContract")
    public IStudentInfo getStudentInfoContract(WebServiceFeature... features) {
        return super.getPort(StudentInfoContract, IStudentInfo.class, features);
    }
    /**
     *
     * @return
     *     returns ICourseTask
     */
    @WebEndpoint(name = "CourseTaskContract")
    public ICourseTask getCourseTaskContract() {
        return super.getPort(CourseTaskContract, ICourseTask.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICourseTask
     */
    @WebEndpoint(name = "CourseTaskContract")
    public ICourseTask getCourseTaskContract(WebServiceFeature... features) {
        return super.getPort(CourseTaskContract, ICourseTask.class, features);
    }
    /**
     *
     * @return
     *     returns IScoreSearch
     */
    @WebEndpoint(name = "ScoreSearchContract")
    public IScoreSearch getScoreSearchContract() {
        return super.getPort(ScoreSearchContract, IScoreSearch.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IScoreSearch
     */
    @WebEndpoint(name = "ScoreSearchContract")
    public IScoreSearch getScoreSearchContract(WebServiceFeature... features) {
        return super.getPort(ScoreSearchContract, IScoreSearch.class, features);
    }
    /**
     *
     * @return
     *     returns ICampus
     */
    @WebEndpoint(name = "CampusContract")
    public ICampus getCampusContract() {
        return super.getPort(CampusContract, ICampus.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICampus
     */
    @WebEndpoint(name = "CampusContract")
    public ICampus getCampusContract(WebServiceFeature... features) {
        return super.getPort(CampusContract, ICampus.class, features);
    }
    /**
     *
     * @return
     *     returns ITeacherSuperviseArrangement
     */
    @WebEndpoint(name = "TeacherSuperviseArrangementContract")
    public ITeacherSuperviseArrangement getTeacherSuperviseArrangementContract() {
        return super.getPort(TeacherSuperviseArrangementContract, ITeacherSuperviseArrangement.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITeacherSuperviseArrangement
     */
    @WebEndpoint(name = "TeacherSuperviseArrangementContract")
    public ITeacherSuperviseArrangement getTeacherSuperviseArrangementContract(WebServiceFeature... features) {
        return super.getPort(TeacherSuperviseArrangementContract, ITeacherSuperviseArrangement.class, features);
    }
    /**
     *
     * @return
     *     returns ICourseSchedule
     */
    @WebEndpoint(name = "CourseScheduleContract")
    public ICourseSchedule getCourseScheduleContract() {
        return super.getPort(CourseScheduleContract, ICourseSchedule.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICourseSchedule
     */
    @WebEndpoint(name = "CourseScheduleContract")
    public ICourseSchedule getCourseScheduleContract(WebServiceFeature... features) {
        return super.getPort(CourseScheduleContract, ICourseSchedule.class, features);
    }

}
